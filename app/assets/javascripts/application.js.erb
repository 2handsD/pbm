//= require jquery
//= require jquery_ujs
//= require jquery.ui.all
//= require social-share-button
//= require angular.min
//= require angular-resource.min
//= require angular-main
//= ui-bootstrap-tpls-0.10.0
//= require_tree .

var map;
var markers = new Array();
var infoWindows = new Array();
var locationIDs = new Array();
var searchSections = new Array('city', 'location', 'machine', 'type', 'operator', 'zone');

function toggleArrows(name, id) {
  var open = '_open_arrow' + (id ? '_' + id : '');
  var closed = '_closed_arrow' + (id ? '_' + id : '');

  jQuery('#' + name + open).toggle();
  jQuery('#' + name + closed).toggle();
}

function toggleData(name, id) {
  var main = id ? '_' + id : '';

  jQuery('#' + name + main).toggle();
  toggleArrows(name, id);
}

function clearInfoWindows() {
  if (infoWindows) {
    for (i in infoWindows) {
      infoWindows[i].close();
    }
  }
}

function clearMarkers() {
  if (markers) {
    for (i in markers) {
      markers[i].setMap(null);
    }
  }
}

function showLocations(ids, lats, lons, contents) {
  locationIDs = ids;
  infoWindows = new Array();
  markers = new Array();

  var bounds = new google.maps.LatLngBounds();
  map = new google.maps.Map(document.getElementById("map_canvas"), { mapTypeId: google.maps.MapTypeId.ROADMAP });

  for (i in ids) {
    var latlng = new google.maps.LatLng(lats[i], lons[i]);

    var marker = new google.maps.Marker({
      animation: google.maps.Animation.DROP,
      position: latlng,
      map: map,
    });

    markers.push(marker);
    bounds.extend(latlng);
    infoWindows.push(new google.maps.InfoWindow({ content: contents[i] }));

    attachMarkerClick(marker, i)
  }


  if (contents.length === 1) {
    map.setZoom(18);
    map.setCenter(new google.maps.LatLng(lats[0], lons[0]));
  } else {
    map.fitBounds(bounds);
  }
}

function attachMarkerClick(marker, index) {
  google.maps.event.addListener(marker, 'click', function() {
    clearInfoWindows();
    map.panTo(marker.getPosition());
    infoWindows[index].open(map, marker);
  });
}

function loadingHTML() {
  return "<div class='loading'><img src='<%= asset_path 'spinner_blue.gif' %>' /> Loading... </div>";
}

function setOtherSearchOptions(newSection) {
  var html = "<span class='black_text'>Search By: </span>";
  for (section in searchSections) {
      html += "  <a href='#' id='" + searchSections[section] + "_section_link' onclick='switchSection(\"" + searchSections[section] + "\");'>" + searchSections[section] + "</a>\n"
  }

  jQuery('#other_search_options').html(html);
}

function switchSection(newSection) {
  setOtherSearchOptions(newSection);
  jQuery("div .section:visible").hide();
  jQuery('#by_' + newSection).toggle();
  jQuery("#" + newSection + "_section_link").toggleClass("active_section_link");
}

function initSearchLocation(region, locationID) {
  var url = '/' + region + '/locations?by_location_id=' + locationID;

  jQuery('#locations').html(loadingHTML());
  jQuery.get(url, function(data) {
    jQuery('#locations').html(data);
  });
}

function initSearchCity(region, city) {
  var url = '/' + region + '/locations?by_city_id=' + city;

  jQuery('#locations').html(loadingHTML());
  jQuery.get(url, function(data) {
    jQuery('#locations').html(data);
  });
}

function showLocationDetail(locationID) {
  locationLookupMapCenter(locationID);

  jQuery('#show_location_detail_location_' + locationID).toggle();
  toggleData('location_detail_location', locationID);
  toggleArrows('location_detail', locationID);
}

function singleLocationLoad(region, locationID) {
  showLocationDetail(locationID);
  toggleData('show_machines_location', locationID);

  jQuery('#show_machines_location_' + locationID).html(loadingHTML());
  jQuery.get('/' + region + '/locations/' + locationID + '/render_machines', function(data) {
    jQuery('#show_machines_location_' + locationID).html(data);
  });
}

function locationLookupMapCenter(locationID) {
  var index = jQuery.inArray(locationID, locationIDs);
  clearInfoWindows();
  map.panTo(markers[index].getPosition());
  infoWindows[index].open(map, markers[index]);
}
