//= require jquery
//= require jquery_ujs
//= require jquery.ui.all

var map;
var markers = new Array();
var infoWindows = new Array();
var locationIDs = new Array();
var searchSections = new Array();

function toggleArrows(name, id) {
  var open = '_open_arrow' + (id ? '_' + id : '');
  var closed = '_closed_arrow' + (id ? '_' + id : '');

  $('#' + name + open).toggle();
  $('#' + name + closed).toggle();
}

function toggleData(name, id) {
  var main = id ? '_' + id : '';

  $('#' + name + main).toggle();
  toggleArrows(name, id);
}

function clearInfoWindows() {
  if (infoWindows) {
    for (i in infoWindows) {
      infoWindows[i].close();
    }
  }
}

function clearMarkers() {
  if (markers) {
    for (i in markers) {
      markers[i].setMap(null);
    }
  }
}

function showLocations(ids, lats, lons, contents) {
  locationIDs = ids;
  infoWindows = new Array();
  markers = new Array();

  var bounds = new google.maps.LatLngBounds();
  map = new google.maps.Map(document.getElementById("map_canvas"), { mapTypeId: google.maps.MapTypeId.ROADMAP });

  for (i in ids) {
    var latlng = new google.maps.LatLng(lats[i], lons[i]);

    var marker = new google.maps.Marker({
      animation: google.maps.Animation.DROP,
      position: latlng,
      map: map,
    });

    markers.push(marker);
    bounds.extend(latlng);

    var infoWindow = new google.maps.InfoWindow({ content: contents[i] });
    infoWindows.push(infoWindow);

    attachMarkerClick(map, marker, infoWindow)
  }

  if (contents.length === 1) {
    map.setZoom(18);
    map.setCenter(new google.maps.LatLng(lats[0], lons[0]));
  } else {
    map.fitBounds(bounds);
  }
}

function attachMarkerClick(mapForMarker, marker, infoWindow) {
  google.maps.event.addListener(marker, 'click', function() {
    clearInfoWindows();
    mapForMarker.panTo(marker.getPosition());
    infoWindow.open(mapForMarker, marker);
  });
}

function loadingHTML() {
  return "<div class='loading'><img src='<%= asset_path 'spinner_blue.gif' %>' /> Loading... </div>";
}

function setOtherSearchOptions(newSection) {
  var html = "<span class='black_text'>Search By: </span>";
  for (section in searchSections) {
      html += "  <a href='#' id='" + searchSections[section] + "_section_link' onclick='switchSection(\"" + searchSections[section] + "\");'>" + searchSections[section] + "</a>\n"
  }

  $('#other_search_options').html(html);
}

function switchSection(newSection) {
  setOtherSearchOptions(newSection);
  $("div .section:visible").hide();
  $('#by_' + newSection).toggle();
  $("#" + newSection + "_section_link").toggleClass("active_section_link");
}

function initSearch(region, locationIDs, locationTypeIDs, zoneIDs, machineIDs, cityName) {
  if (locationIDs || locationTypeIDs || zoneIDs || machineIDs || cityName) {
    var url = '/' + region + '/locations?by_location_id=' + locationIDs + ';by_type_id=' + locationTypeIDs + ';by_zone_id=' + zoneIDs + ';by_machine_id=' + machineIDs + ';by_city_id=' + cityName;

    $('#locations').html(loadingHTML());
    $.get(url, function(data) {
      $('#locations').html(data);
    });
  }
}

function showLocationDetail(locationID) {
  locationLookupMapCenter(locationID);

  $('#show_location_detail_location_' + locationID).toggle();
  toggleData('location_detail_location', locationID);
  toggleArrows('location_detail', locationID);
}

function singleLocationLoad(region, locationID) {
  showLocationDetail(locationID);
  toggleData('show_machines_location', locationID);

  $('#show_machines_location_' + locationID).html(loadingHTML());
  $.get('/' + region + '/locations/' + locationID + '/render_machines', function(data) {
    $('#show_machines_location_' + locationID).html(data);
  });
}

function locationLookupMapCenter(locationID) {
  var index = jQuery.inArray(locationID, locationIDs);
  clearInfoWindows();
  map.panTo(markers[index].getPosition());
  infoWindows[index].open(map, markers[index]);
}

function setSearchSections(newSearchSections) {
  searchSections = newSearchSections;
}

function resetInfoWindowHeights() {
  for (i in infoWindows) {
    infoWindows[i].setContent($('#infowindow_' + locationIDs[i]).html());
  }
}

function initializeRegionMap(ids, lats, lons, contents) {
    infoWindows = new Array();

    var bounds = new google.maps.LatLngBounds();
    var regionMap = new google.maps.Map(document.getElementById("region_map"), { mapTypeId: google.maps.MapTypeId.ROADMAP });

    for (i in ids) {
      var latlng = new google.maps.LatLng(lats[i], lons[i]);

      var marker = new google.maps.Marker({
        animation: google.maps.Animation.DROP,
        position: latlng,
        map: regionMap,
      });

      bounds.extend(latlng);

      var infoWindow = new google.maps.InfoWindow({ content: contents[i] });
      infoWindows.push(infoWindow);

      attachMarkerClick(regionMap, marker, infoWindow)
    }

    regionMap.fitBounds(bounds);
}

